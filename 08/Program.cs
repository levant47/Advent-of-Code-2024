public static class Program
{
    public static void Main()
    {
        Console.WriteLine("Starting problem 08...");

        var input = INPUT;
        var game = ParseGame(input);
        Console.WriteLine($"Part 1 answer: {GetAllAntinodes(game).Count}");
        Console.WriteLine($"Part 2 answer: {GetAllAntinodes(game, part2: true).Count}");

        Console.WriteLine("Done");
    }

    public record Position(int X, int Y);

    public class Antenna
    {
        public char Frequency;
        public Position Position;
    }

    public class Game
    {
        public int MapWidth;
        public int MapHeight;
        public Dictionary<char, List<Antenna>> Antennas;
    }

    public static Game ParseGame(string source)
    {
        var lines = source.Split('\n', StringSplitOptions.RemoveEmptyEntries).Select(line => line.Trim()).ToList();
        var antennas = new Dictionary<char, List<Antenna>>();
        for (var y = 0; y < lines.Count; y++)
        {
            var line = lines[y];
            for (var x = 0; x < line.Length; x++)
            {
                var c = line[x];
                if (c != '.')
                {
                    var antenna = new Antenna { Frequency = c, Position = new(x, y) };
                    if (!antennas.ContainsKey(antenna.Frequency)) { antennas[antenna.Frequency] = []; }
                    antennas[antenna.Frequency].Add(antenna);
                }
            }
        }
        return new()
        {
            MapWidth = lines[0].Length,
            MapHeight = lines.Count,
            Antennas = antennas,
        };
    }

    public static HashSet<Position> GetAllAntinodes(Game game, bool part2 = false)
    {
        var result = new HashSet<Position>();
        foreach (var antennas in game.Antennas.Values)
        {
            for (var i = 0; i < antennas.Count; i++)
            {
                for (var k = i + 1; k < antennas.Count; k++)
                {
                    var antinodes = GetAntinodesForTwoAntennas(antennas[i].Position, antennas[k].Position, game.MapWidth, game.MapHeight, part2);
                    foreach (var antinode in antinodes) { result.Add(antinode); }
                }
            }
        }
        return result;
    }

    public static List<Position> GetAntinodesForTwoAntennas(Position p1, Position p2, int mapWidth, int mapHeight, bool part2)
    {
        var movementX = p1.X - p2.X;
        var movementY = p1.Y - p2.Y;
        if (!part2)
        {
            var antinode1X = p1.X + movementX;
            var antinode1Y = p1.Y + movementY;
            var antinode2X = p2.X - movementX;
            var antinode2Y = p2.Y - movementY;
            return new List<Position> { new(antinode1X, antinode1Y), new(antinode2X, antinode2Y) }
                .Where(p => p.X >= 0 && p.X < mapWidth && p.Y >= 0 && p.Y < mapHeight)
                .ToList();
        }
        else
        {
            var result = new List<Position>();
            for (var p = p1; p.X >= 0 && p.X < mapWidth && p.Y >= 0 && p.Y < mapHeight; p = new(p.X + movementX, p.Y + movementY))
            {
                result.Add(p);
            }
            for (var p = p2; p.X >= 0 && p.X < mapWidth && p.Y >= 0 && p.Y < mapHeight; p = new(p.X - movementX, p.Y - movementY))
            {
                result.Add(p);
            }
            return result;
        }
    }

    public const string EXAMPLE_INPUT = """
    ............
    ........0...
    .....0......
    .......0....
    ....0.......
    ......A.....
    ............
    ............
    ........A...
    .........A..
    ............
    ............
    """;

    public const string INPUT = """
    .AU..Z.....8.......................t..C.6.........
    ..................................................
    .....K.U....................v.....................
    ...Z..A.............................v8.....t......
    p..................a8...........b...t.............
    ..pU.....A..4.....................................
    ..........................E.......................
    ...........K..V..............v8.....Cb............
    ....V................b...p........................
    ....7.............................................
    ....4.....A..........V......K..E.....6............
    .4.........................Vb...........0..C......
    ..................................k........N......
    K....7...........9...........6.....kE.............
    ......7......1...................k.......C........
    ...p....................9....0.....N6.............
    ..........Z........e..1...........................
    .............................E................N...
    ...4...............................v0..........z..
    ........U.....Z......1................z..a........
    .....5.......7......................N.............
    ....................n.............................
    .......................0.9...c..........z.d.T.....
    ...................n.W......a...t......D....d.....
    ..........I.....e......................o9.........
    ....5..2................e...........D.............
    ...........................n......D...............
    ......25I...1..................c......W.......o...
    ................n..............D..................
    ...........I........i..e..........................
    ......5......2.....P..............a...............
    ...........................z..................T...
    ..........j.....................Wd...........O..o.
    ................................................c.
    .................I................B...............
    ...........u.............................T.d......
    .............................................J....
    .....3.i....u......................o..............
    3...i.............................................
    ..................................................
    ...........j...............W....O............w....
    ...P........................J.....................
    .....u............................................
    .............................w....................
    ......u.................2...w...J.................
    .....j.....B3......................O..............
    P....B..............................c.............
    ................B.............w...................
    .....i.............3..............................
    ..P.j....................J..........O.............
    """;
}
